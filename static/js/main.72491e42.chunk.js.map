{"version":3,"sources":["items.js","orders.js","ordersOld.js","App.js","serviceWorker.js","index.js"],"names":["Option","Select","Items","useState","arrItems","setArrItems","key","setKey","useEffect","fetch","then","res","json","sendMessage","text","message","info","changeAvailable","value","product","index","a","map","item","_id","newItem","varPrice","available","newArr","changeCategory","category","addPrice","length","push","count","price","delPrice","splice","saveProd","changeProduct","changeCount","changeCountLabel","countLabel","changePrice","changeIsTrading","isTrading","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","error","columns","title","dataIndex","render","thumb_photo","style","width","height","src","onChange","color","margin","placeholder","defaultValue","onClick","danger","display","justifyContent","type","className","event","target","dataSource","Orders","arrOrders","setArrOrders","changeStatus","status","changeTrack","track","console","log","user","rel","href","num","sum","jsonParams","order","OrdersOld","TabPane","Tabs","App","tab","setTab","defaultActiveKey","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.72491e42.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {Table, Tag, Space, Button, InputNumber, Select, message, Input} from 'antd';\r\n\r\nconst {Option} = Select;\r\nconst Items = () => {\r\n    const [arrItems, setArrItems] = useState([]);\r\n    const [key, setKey] = useState('');\r\n    useEffect(()=>{\r\n        fetch('https://saharnypossum.herokuapp.com/items/getVkItems/all')\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                setArrItems(res)\r\n            })\r\n    }, []);\r\n\r\n    const sendMessage = (text) => {\r\n        message.info(text);\r\n    };\r\n\r\n    const changeAvailable = async (value, product, index) => {\r\n        const newArr = await arrItems.map(item=>{\r\n            if (item._id === product._id){\r\n                const newItem = {...item};\r\n                newItem.varPrice[index].available = value;\r\n                return newItem\r\n            }\r\n            return item\r\n        });\r\n        setArrItems(newArr)\r\n    };\r\n\r\n    const changeCategory = async (value, product) => {\r\n        const newArr = await arrItems.map(item=>{\r\n            if (item._id === product._id){\r\n                const newItem = {...item};\r\n                newItem.category = value;\r\n                return newItem\r\n            }\r\n            return item\r\n        });\r\n        setArrItems(newArr)\r\n    };\r\n\r\n    const addPrice = async(product) => {\r\n        if (product.varPrice.length <3){\r\n            const newArr = await arrItems.map(item=>{\r\n                if (item._id === product._id){\r\n                    const newItem = {...item};\r\n                    newItem.varPrice.push({count: 0, price: 0});\r\n                    return newItem\r\n                }\r\n                return item\r\n            });\r\n            setArrItems(newArr)\r\n        } else {\r\n            sendMessage('Нельзя добавлять больше 3 пунктов')\r\n        }\r\n    };\r\n\r\n    const delPrice = async(product, index) => {\r\n        if (product.varPrice.length !== 1){\r\n            const newArr = await arrItems.map(item=>{\r\n                if (item._id === product._id){\r\n                    const newItem = {...item};\r\n                    newItem.varPrice.splice(index, 1);\r\n                    return newItem\r\n                }\r\n                return item\r\n            });\r\n            setArrItems(newArr)\r\n        } else {\r\n            sendMessage('Нельзя удалять последний элемент цены')\r\n        }\r\n    };\r\n\r\n    const saveProd = async(product) => {\r\n        product.key = key;\r\n        changeProduct(product)\r\n    };\r\n\r\n    const changeCount = async(value, product, index) => {\r\n        const newArr = await arrItems.map(item=>{\r\n            if (item._id === product._id){\r\n                const newItem = {...item};\r\n                newItem.varPrice[index].count = value;\r\n                return newItem\r\n            }\r\n            return item\r\n        });\r\n        setArrItems(newArr)\r\n    };\r\n\r\n    const changeCountLabel = async(value, product, index) => {\r\n        const newArr = await arrItems.map(item=>{\r\n            if (item._id === product._id){\r\n                const newItem = {...item};\r\n                newItem.varPrice[index].countLabel = value;\r\n                return newItem\r\n            }\r\n            return item\r\n        });\r\n        setArrItems(newArr)\r\n    };\r\n\r\n    const changePrice = async(value, product, index) => {\r\n        const newArr = await arrItems.map(item=>{\r\n            if (item._id === product._id){\r\n                const newItem = {...item};\r\n                newItem.varPrice[index].price = value;\r\n                return newItem\r\n            }\r\n            return item\r\n        });\r\n        setArrItems(newArr)\r\n    };\r\n\r\n    const changeIsTrading = async (product) => {\r\n        const newArr = await arrItems.map(item=>{\r\n            if (item._id === product._id){\r\n                const newItem = {...item};\r\n                newItem.isTrading = !product.isTrading;\r\n                newItem.key = key;\r\n                changeProduct(newItem)\r\n                return newItem\r\n            }\r\n            return item\r\n        });\r\n        setArrItems(newArr)\r\n        sendMessage('Готово.')\r\n    };\r\n\r\n    const changeProduct = (product) => {\r\n        product.key = key;\r\n        fetch('https://saharnypossum.herokuapp.com/items/changeVkItem',{\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(product) // body data type must match \"Content-Type\" header\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>res.error ? sendMessage(res.error) : sendMessage('Изменения сохранены'))\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Фото',\r\n            dataIndex: 'thumb_photo',\r\n            key: 'thumb_photo',\r\n            render: thumb_photo => <img style={{width: 100, height: 100}} src={thumb_photo}/>,\r\n        },\r\n        {\r\n            title: 'Название',\r\n            dataIndex: 'title',\r\n            key: 'title',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Категория',\r\n            dataIndex: 'category',\r\n            key: 'category',\r\n            render: (category, product) => <Select value={category || 'Выберите категорию'} onChange={(value)=>changeCategory(value, product)}>\r\n                <Option value={'Консервы'}>Консервы</Option>\r\n                <Option value={'Корма/добавки для живых насекомых'}>Корма/добавки для живых насекомых</Option>\r\n                <Option value={'Наборы/смеси'}>Наборы/смеси</Option>\r\n                <Option value={'Сублимированные'}>Сублимированные</Option>\r\n                <Option value={'Птицы Насекомоядные,листоядные, приматы'}>Птицы Насекомоядные,листоядные, приматы</Option>\r\n                <Option value={'Рыбки и крабы'}>Рыбки и крабы</Option>\r\n                <Option value={'Витамины/лакомства'}>Витамины/лакомства</Option>\r\n                <Option value={'Корма/диеты'}>Корма/диеты</Option>\r\n                <Option value={'Приматы'}>Приматы</Option>\r\n                <Option value={'Средства ухода'}>Средства ухода</Option>\r\n                <Option value={'Прочее'}>Прочее</Option>\r\n            </Select>,\r\n        },\r\n        {\r\n            title: 'Зависимости',\r\n            dataIndex: 'varPrice',\r\n            key: 'varPrice',\r\n            render: (varPrice, product) => {\r\n                return (\r\n                    varPrice.map((item, index)=>{\r\n                        return (\r\n                            <div key={index}>\r\n                                <Tag color={'green'}>\r\n                                    <div>\r\n                                        Количество\r\n                                        <InputNumber style={{margin: 5}} placeholder='Количество' value={item.available} onChange={(value)=>changeAvailable(value, product, index)}/>\r\n                                        Фасовка\r\n                                        <InputNumber style={{margin: 5}} placeholder='Вес/Обьем' value={item.count} onChange={(value)=>changeCount(value, product, index)}/>\r\n                                        <Select value={item.countLabel || null} onChange={(value)=>changeCountLabel(value, product, index)}>\r\n                                            <Option value={'Вес'}>Вес</Option>\r\n                                            <Option value={'Цвет'}>Цвет</Option>\r\n                                            <Option value={'Объем'}>Объем</Option>\r\n                                            <Option value={'Размер'}>Размер</Option>\r\n                                        </Select>\r\n                                        <InputNumber style={{margin: 5}} placeholder='Цена' value={item.price} onChange={(value)=>changePrice(value, product, index)}/>\r\n                                        <Select defaultValue={'руб.'}>\r\n                                            <Option value={'руб.'}>руб.</Option>\r\n                                        </Select>\r\n                                        <Button onClick={()=> delPrice(product, index)} style={{margin: 5}} danger>Удалить</Button>\r\n                                    </div>\r\n                                    {\r\n                                        index === varPrice.length-1 &&\r\n                                        <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                            <Button type=\"dashed\" onClick={()=>addPrice(product)}>Добавить</Button>\r\n                                            <Button type=\"dashed\" onClick={()=>saveProd(product)}>Сохранить</Button>\r\n                                        </div>\r\n                                    }\r\n                                </Tag>\r\n                            </div>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: 'Статус продажи',\r\n            dataIndex: 'isTrading',\r\n            key: 'isTrading',\r\n            render: (isTrading, product) =>{\r\n                return (\r\n                    <Tag onClick={()=>changeIsTrading(product)} color={isTrading ? 'green' : 'red'} key={1}>\r\n                        {isTrading ? 'Продается' : 'Снят с продажи'}\r\n                    </Tag>\r\n                )\r\n            },\r\n        }\r\n    ];\r\n    return (\r\n        <div className=\"container\">\r\n            <Input value={key} onChange={event=>setKey(event.target.value)} placeholder={'Вставьте в это поле ключ доступа. Без него изменения не будут применены.'}/>\r\n            <Table columns={columns} dataSource={arrItems} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Items","import React, {useEffect, useState} from \"react\";\r\nimport {Table, Tag, Space, Button, InputNumber, Select, message, Input} from 'antd';\r\nconst {Option} = Select;\r\nconst Orders = () => {\r\n    const [arrOrders, setArrOrders] = useState([]);\r\n    const [key, setKey] = useState('');\r\n    const changeStatus = async(value, product) => {\r\n        const newArr = await arrOrders.map(item=>{\r\n            if (item._id === product._id){\r\n                const newItem = {...item};\r\n                newItem.status = value;\r\n                return newItem\r\n            }\r\n            return item\r\n        });\r\n        setArrOrders(newArr)\r\n    };\r\n    const changeTrack = async(track, product) => {\r\n        console.log(track)\r\n        const newArr = await arrOrders.map(item=>{\r\n            if (item._id === product._id){\r\n                const newItem = {...item};\r\n                newItem.track = track;\r\n                return newItem\r\n            }\r\n            return item\r\n        });\r\n        setArrOrders(newArr)\r\n    }\r\n    const saveProd = async(product) => {\r\n        product.key = key;\r\n        changeProduct(product)\r\n    };\r\n    const changeProduct = (product) => {\r\n        product.key = key;\r\n        fetch('https://saharnypossum.herokuapp.com/pay/orders',{\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(product) // body data type must match \"Content-Type\" header\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>res.error ? sendMessage(res.error) : sendMessage('Изменения сохранены'))\r\n    };\r\n    const sendMessage = (text) => {\r\n        message.info(text);\r\n    };\r\n    useEffect(()=>{\r\n        fetch('https://saharnypossum.herokuapp.com/pay/orders', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify({}) //\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                console.log(res)\r\n                setArrOrders(res)\r\n            })\r\n    }, []);\r\n    const columns = [\r\n        {\r\n            title: 'Пользователь',\r\n            dataIndex: 'user',\r\n            key: 'user',\r\n            render: user => <a target=\"_blank\" rel=\"noopener noreferrer\" href={`http://vk.com/id${user}`}>{`http://vk.com/id${user}`}</a>,\r\n        },\r\n        {\r\n            title: 'Номер заказа',\r\n            dataIndex: 'num',\r\n            key: 'num',\r\n            render: num => num,\r\n        },\r\n        {\r\n            title: 'Сумма',\r\n            dataIndex: 'sum',\r\n            key: 'sum',\r\n            render: sum => sum,\r\n        },\r\n        {\r\n            title: 'Детали',\r\n            dataIndex: 'jsonParams',\r\n            key: 'jsonParams',\r\n            render: (jsonParams, order) =><div>\r\n                <pre>{JSON.stringify(jsonParams, \"\", 2)}</pre>\r\n                <Button type=\"dashed\" onClick={()=>saveProd(order)}>Сохранить</Button>\r\n            </div>,\r\n        },\r\n        {\r\n            title: 'Track-code',\r\n            dataIndex: 'track',\r\n            key: 'track',\r\n            render: (track, order) =>(<Input value={track} placeholder={!track && \"Не указан\"} onChange={(event)=>changeTrack(event.target.value, order)}/>),\r\n        },\r\n        {\r\n            title: 'Статус',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            render: (status, order) =>(<Select value={status || null} onChange={(value)=>changeStatus(value, order)}>\r\n                <Option value={'В обработке'}>В обработке</Option>\r\n                <Option value={'Оплачен'}>Оплачен</Option>\r\n                <Option value={'Отправлен'}>Отправлен</Option>\r\n                <Option value={'Отменен'}>Отменен</Option>\r\n            </Select>),\r\n        }\r\n    ];\r\n    return (\r\n        <div className=\"container\">\r\n            <Input value={key} onChange={event=>setKey(event.target.value)} placeholder={'Вставьте в это поле ключ доступа. Без него изменения не будут применены.'}/>\r\n            <Table columns={columns} dataSource={arrOrders} />\r\n        </div>\r\n    )\r\n}\r\nexport default Orders","import React, {useEffect, useState} from \"react\";\r\nimport {Table, Tag, Space, Button, InputNumber, Select, message, Input} from 'antd';\r\nconst {Option} = Select;\r\nconst OrdersOld = () => {\r\n    const [arrOrders, setArrOrders] = useState([]);\r\n    const [key, setKey] = useState('');\r\n    const changeStatus = async(value, product) => {\r\n        const newArr = await arrOrders.map(item=>{\r\n            if (item._id === product._id){\r\n                const newItem = {...item};\r\n                newItem.status = value;\r\n                return newItem\r\n            }\r\n            return item\r\n        });\r\n        setArrOrders(newArr)\r\n    };\r\n    const changeTrack = async(track, product) => {\r\n        const newArr = await arrOrders.map(item=>{\r\n            if (item._id === product._id){\r\n                const newItem = {...item};\r\n                newItem.track = track;\r\n                return newItem\r\n            }\r\n            return item\r\n        });\r\n        setArrOrders(newArr)\r\n    }\r\n    const saveProd = async(product) => {\r\n        product.key = key;\r\n        changeProduct(product)\r\n    };\r\n    const changeProduct = (product) => {\r\n        product.key = key;\r\n        fetch('https://saharnypossum.herokuapp.com/pay/orders',{\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(product) // body data type must match \"Content-Type\" header\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>res.error ? sendMessage(res.error) : sendMessage('Изменения сохранены'))\r\n    };\r\n    const sendMessage = (text) => {\r\n        message.info(text);\r\n    };\r\n    useEffect(()=>{\r\n        fetch('https://saharnypossum.herokuapp.com/pay/ordersOld', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify({}) //\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                console.log(res)\r\n                setArrOrders(res)\r\n            })\r\n    }, []);\r\n    const columns = [\r\n        {\r\n            title: 'Пользователь',\r\n            dataIndex: 'user',\r\n            key: 'user',\r\n            render: user => <a target=\"_blank\" rel=\"noopener noreferrer\" href={`http://vk.com/id${user}`}>{`http://vk.com/id${user}`}</a>,\r\n        },\r\n        {\r\n            title: 'Номер заказа',\r\n            dataIndex: 'num',\r\n            key: 'num',\r\n            render: num => num,\r\n        },\r\n        {\r\n            title: 'Сумма',\r\n            dataIndex: 'sum',\r\n            key: 'sum',\r\n            render: sum => sum,\r\n        },\r\n        {\r\n            title: 'Детали',\r\n            dataIndex: 'jsonParams',\r\n            key: 'jsonParams',\r\n            render: (jsonParams, order) =><div>\r\n                <pre>{JSON.stringify(jsonParams, \"\", 2)}</pre>\r\n                <Button type=\"dashed\" onClick={()=>saveProd(order)}>Сохранить</Button>\r\n            </div>,\r\n        },\r\n        {\r\n            title: 'Track-code',\r\n            dataIndex: 'track',\r\n            key: 'track',\r\n            render: (track, order) =>(<Input value={track} placeholder={!track && \"Не указан\"} onChange={(event)=>changeTrack(event.target.value, order)}/>),\r\n        },\r\n        {\r\n            title: 'Статус',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            render: (status, order) =>(<Select value={status || null} onChange={(value)=>changeStatus(value, order)}>\r\n                <Option value={'В обработке'}>В обработке</Option>\r\n                <Option value={'Оплачен'}>Оплачен</Option>\r\n                <Option value={'Отправлен'}>Отправлен</Option>\r\n                <Option value={'Отменен'}>Отменен</Option>\r\n            </Select>),\r\n        }\r\n    ];\r\n    return (\r\n        <div className=\"container\">\r\n            <Input value={key} onChange={event=>setKey(event.target.value)} placeholder={'Вставьте в это поле ключ доступа. Без него изменения не будут применены.'}/>\r\n            <Table columns={columns} dataSource={arrOrders} />\r\n        </div>\r\n    )\r\n}\r\nexport default OrdersOld","import React, {useState} from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport {Tabs} from \"antd\";\nimport Items from \"./items\";\nimport Orders from \"./orders\";\nimport OrdersOld from \"./ordersOld\"\nconst { TabPane } = Tabs;\n\nconst App = () => {\n    const [tab, setTab] = useState('items')\n    const changeTab = (key) => {\n        setTab(key)\n    }\nreturn (\n    <Tabs defaultActiveKey={tab} onChange={changeTab}>\n        <TabPane tab=\"Товары\" key=\"items\">\n            <Items />\n        </TabPane>\n        <TabPane tab=\"Заказы (новые)\" key=\"orders\">\n            <Orders />\n        </TabPane>\n        <TabPane tab=\"Заказы (отправленные)\" key=\"orders_old\">\n            <OrdersOld />\n        </TabPane>\n    </Tabs>\n)\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}