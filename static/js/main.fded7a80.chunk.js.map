{"version":3,"sources":["items.js","orders.js","ordersOld.js","App.js","serviceWorker.js","index.js"],"names":["Option","Select","Items","useState","arrItems","setArrItems","key","setKey","visible","setVisible","Form","useForm","form","useEffect","fetch","then","res","json","sendMessage","text","message","info","changeAvailable","value","product","index","a","map","item","_id","newItem","varPrice","available","newArr","changeCategory","category","addPrice","length","push","count","price","delPrice","splice","saveProd","changeProduct","changeCount","changeDescription","description","changeCountLabel","countLabel","changePrice","changeIsTrading","isTrading","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","error","columns","title","dataIndex","render","thumb_photo","style","width","height","src","TextArea","onChange","e","target","label","color","margin","placeholder","defaultValue","active","onClick","disabled","danger","display","justifyContent","type","className","onOk","onCancel","footer","name","onFinish","v","getFieldsValue","id","Date","now","onFinishFailed","console","log","Item","rules","required","htmlType","event","dataSource","Orders","arrOrders","setArrOrders","changeStatus","status","changeTrack","track","user","rel","href","num","sum","jsonParams","order","OrdersOld","TabPane","Tabs","App","tab","setTab","defaultActiveKey","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fded7a80.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {Table, Tag, Modal, Button, InputNumber, Select, message, Input, Form} from 'antd';\r\nimport TextArea from \"antd/es/input/TextArea\";\r\n\r\nconst {Option} = Select;\r\nconst Items = () => {\r\n    const [arrItems, setArrItems] = useState([]);\r\n    const [key, setKey] = useState('');\r\n    const [visible, setVisible] = useState(false);\r\n    const [form] = Form.useForm();\r\n    useEffect(()=>{\r\n        fetch('https://saharnypossum.herokuapp.com/items/getVkItems/all')\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                setArrItems(res)\r\n            })\r\n    }, []);\r\n\r\n    const sendMessage = (text) => {\r\n        message.info(text);\r\n    };\r\nconst saveNewPropd = () => {\r\n    const v = form.getFieldsValue([\"title\", \"description\", \"thumb_photo\", \"category\", \"group\"]);\r\n    v.id = Date.now();\r\n    v.key = key;\r\n    fetch('https://saharnypossum.herokuapp.com/items/newVkItem',{\r\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n        mode: 'cors', // no-cors, *cors, same-origin\r\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrerPolicy: 'no-referrer', // no-referrer, *client\r\n        body: JSON.stringify(v) // body data type must match \"Content-Type\" header\r\n    })\r\n        .then(res=>res.json())\r\n        .then(res=>{\r\n            res.error ? sendMessage(res.error) : sendMessage('Изменения сохранены. Продукт появится последним в списке после перезагрузки страницы.');\r\n            setVisible(!visible)\r\n        })\r\n}\r\n    const changeAvailable = async (value, product, index) => {\r\n        const newArr = await arrItems.map(item=>{\r\n            if (item._id === product._id){\r\n                const newItem = {...item};\r\n                newItem.varPrice[index].available = value;\r\n                return newItem\r\n            }\r\n            return item\r\n        });\r\n        setArrItems(newArr)\r\n    };\r\n\r\n    const changeCategory = async (value, product) => {\r\n        const newArr = await arrItems.map(item=>{\r\n            if (item._id === product._id){\r\n                const newItem = {...item};\r\n                newItem.category = value;\r\n                return newItem\r\n            }\r\n            return item\r\n        });\r\n        setArrItems(newArr)\r\n    };\r\n\r\n    const addPrice = async(product) => {\r\n        if (product.varPrice.length <3){\r\n            const newArr = await arrItems.map(item=>{\r\n                if (item._id === product._id){\r\n                    const newItem = {...item};\r\n                    newItem.varPrice.push({count: 0, price: 0});\r\n                    return newItem\r\n                }\r\n                return item\r\n            });\r\n            setArrItems(newArr)\r\n        } else {\r\n            sendMessage('Нельзя добавлять больше 3 пунктов')\r\n        }\r\n    };\r\n\r\n    const delPrice = async(product, index) => {\r\n        if (product.varPrice.length !== 1){\r\n            const newArr = await arrItems.map(item=>{\r\n                if (item._id === product._id){\r\n                    const newItem = {...item};\r\n                    newItem.varPrice.splice(index, 1);\r\n                    return newItem\r\n                }\r\n                return item\r\n            });\r\n            setArrItems(newArr)\r\n        } else {\r\n            sendMessage('Нельзя удалять последний элемент цены')\r\n        }\r\n    };\r\n\r\n    const saveProd = async(product) => {\r\n        product.key = key;\r\n        changeProduct(product)\r\n    };\r\n\r\n    const changeCount = async(value, product, index) => {\r\n        const newArr = await arrItems.map(item=>{\r\n            if (item._id === product._id){\r\n                const newItem = {...item};\r\n                newItem.varPrice[index].count = value;\r\n                return newItem\r\n            }\r\n            return item\r\n        });\r\n        setArrItems(newArr)\r\n    };\r\n\r\n    const changeDescription = async(value, product)=> {\r\n        const newArr = await arrItems.map(item=>{\r\n            if (item._id === product._id){\r\n                const newItem = {...item};\r\n                newItem.description = value;\r\n                return newItem\r\n            }\r\n            return item\r\n        });\r\n        setArrItems(newArr)\r\n    }\r\n\r\n    const changeCountLabel = async(value, product, index) => {\r\n        const newArr = await arrItems.map(item=>{\r\n            if (item._id === product._id){\r\n                const newItem = {...item};\r\n                newItem.varPrice[index].countLabel = value;\r\n                return newItem\r\n            }\r\n            return item\r\n        });\r\n        setArrItems(newArr)\r\n    };\r\n\r\n    const changePrice = async(value, product, index) => {\r\n        const newArr = await arrItems.map(item=>{\r\n            if (item._id === product._id){\r\n                const newItem = {...item};\r\n                newItem.varPrice[index].price = value;\r\n                return newItem\r\n            }\r\n            return item\r\n        });\r\n        setArrItems(newArr)\r\n    };\r\n\r\n    const changeIsTrading = async (product) => {\r\n        const newArr = await arrItems.map(item=>{\r\n            if (item._id === product._id){\r\n                const newItem = {...item};\r\n                newItem.isTrading = !product.isTrading;\r\n                newItem.key = key;\r\n                changeProduct(newItem)\r\n                return newItem\r\n            }\r\n            return item\r\n        });\r\n        setArrItems(newArr)\r\n        sendMessage('Готово.')\r\n    };\r\n\r\n    const changeProduct = (product) => {\r\n        product.key = key;\r\n        fetch('https://saharnypossum.herokuapp.com/items/changeVkItem',{\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(product) // body data type must match \"Content-Type\" header\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>res.error ? sendMessage(res.error) : sendMessage('Изменения сохранены'))\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Фото',\r\n            dataIndex: 'thumb_photo',\r\n            key: 'thumb_photo',\r\n            render: thumb_photo => <img style={{width: 100, height: 100}} src={thumb_photo}/>,\r\n        },\r\n        {\r\n            title: 'Название',\r\n            dataIndex: 'title',\r\n            key: 'title',\r\n            render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'Описание',\r\n            dataIndex: 'description',\r\n            key: 'description',\r\n            render: (description, product) => <TextArea onChange={(e)=>changeDescription(e.target.value, product)} style={{width: 300, height: 100}} value={description}/>,\r\n        },\r\n        {\r\n            title: 'Категория',\r\n            dataIndex: 'category',\r\n            key: 'category',\r\n            render: (category, product) => <Select label=\"Подкатегория\" value={category || 'Выберите подкатегорию'} onChange={(value)=>changeCategory(value, product)}>\r\n                <Option value={'Консервы'}>Консервы</Option>\r\n                <Option value={'Корма/добавки для живых насекомых'}>Корма/добавки для живых насекомых</Option>\r\n                <Option value={'Наборы/смеси'}>Наборы/смеси</Option>\r\n                <Option value={'Сублимированные'}>Сублимированные</Option>\r\n                <Option value={'Насекомоядные,листоядные,приматы'}>Насекомоядные,листоядные,приматы</Option>\r\n                <Option value={'Рыбки и крабы'}>Рыбки и крабы</Option>\r\n                <Option value={'Витамины/лакомства'}>Витамины/лакомства</Option>\r\n                <Option value={'Корма/диеты'}>Корма/диеты</Option>\r\n                <Option value={'Птицы'}>Птицы</Option>\r\n                <Option value={'Средства ухода'}>Средства ухода</Option>\r\n                <Option value={'Прочее'}>Прочее</Option>\r\n            </Select>,\r\n        },\r\n        {\r\n            title: 'Зависимости',\r\n            dataIndex: 'varPrice',\r\n            key: 'varPrice',\r\n            render: (varPrice, product) => {\r\n                return (\r\n                    varPrice.map((item, index)=>{\r\n                        return (\r\n                            <div key={index}>\r\n                                <Tag color={'green'}>\r\n                                    <div>\r\n                                        Количество\r\n                                        <InputNumber style={{margin: 5}} placeholder='Количество' value={item.available} onChange={(value)=>changeAvailable(value, product, index)}/>\r\n                                        Фасовка\r\n                                        <Input style={{margin: 5, width: 80}} placeholder='Вес/Обьем' value={item.count} onChange={(e)=>changeCount(e.target.value, product, index)}/>\r\n                                        <Select value={item.countLabel || null} onChange={(value)=>changeCountLabel(value, product, index)}>\r\n                                            <Option value={'Вес'}>Вес</Option>\r\n                                            <Option value={'Объем'}>Объем</Option>\r\n                                            <Option value={'Размер'}>Размер</Option>\r\n                                            <Option value={'Вкус'}>Вкус</Option>\r\n                                        </Select>\r\n                                        <InputNumber style={{margin: 5}} placeholder='Цена' value={item.price} onChange={(value)=>changePrice(value, product, index)}/>\r\n                                        <Select defaultValue={'руб.'}>\r\n                                            <Option value={'руб.'}>руб.</Option>\r\n                                        </Select>\r\n                                        {\r\n                                            item.active === true ?\r\n                                                <Button onClick={()=> delPrice(product, index)} style={{margin: 5}} disabled danger>Удалить</Button> :\r\n                                                <Button onClick={()=> delPrice(product, index)} style={{margin: 5}} danger>Удалить</Button>\r\n                                        }\r\n                                    </div>\r\n                                    {\r\n                                        index === varPrice.length-1 &&\r\n                                        <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                            <Button type=\"dashed\" onClick={()=>addPrice(product)}>Добавить</Button>\r\n                                            <Button type=\"dashed\" onClick={()=>saveProd(product)}>Сохранить</Button>\r\n                                        </div>\r\n                                    }\r\n                                </Tag>\r\n                            </div>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: 'Статус продажи',\r\n            dataIndex: 'isTrading',\r\n            key: 'isTrading',\r\n            render: (isTrading, product) =>{\r\n                return (\r\n                    <Tag onClick={()=>changeIsTrading(product)} color={isTrading ? 'green' : 'red'} key={1}>\r\n                        {isTrading ? 'Продается' : 'Снят с продажи'}\r\n                    </Tag>\r\n                )\r\n            },\r\n        }\r\n    ];\r\n    return (\r\n        <div className=\"container\">\r\n            <Modal\r\n                title=\"Добавление товара\"\r\n                visible={visible}\r\n                onOk={()=>setVisible(!visible)}\r\n                onCancel={()=>setVisible(!visible)}\r\n                footer={[]}\r\n            >\r\n                <Form\r\n                    name=\"add\"\r\n                    onFinish={saveNewPropd}\r\n                    onFinishFailed={()=>console.log(form)}\r\n                    form={form}\r\n                >\r\n                    <Form.Item\r\n                        label=\"Название\"\r\n                        name=\"title\"\r\n                        rules={[{ required: true, message: 'Пожалуйста, укажите название' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"Описание\"\r\n                        name=\"description\"\r\n                        rules={[{ required: true, message: 'Пожалуйста, укажите описание' }]}\r\n                    >\r\n                        <TextArea />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"Ссылка на фото\"\r\n                        name=\"thumb_photo\"\r\n                        rules={[{ required: true, message: 'Пожалуйста, укажите описание' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Группа\"\r\n                               name=\"group\">\r\n                        <Select>\r\n                            <Option value={135}>Ежи</Option>\r\n                            <Option value={136}>Рептилии</Option>\r\n                            <Option value={134}>Насекомые</Option>\r\n                            <Option value={137}>Сахарный поссум</Option>\r\n                            <Option value={138}>Другие животные, птицы, рыбки</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Подкатегория\"\r\n                               name=\"category\">\r\n                        <Select>\r\n                            <Option value={'Консервы'}>Консервы</Option>\r\n                            <Option value={'Корма/добавки для живых насекомых'}>Корма/добавки для живых насекомых</Option>\r\n                            <Option value={'Наборы/смеси'}>Наборы/смеси</Option>\r\n                            <Option value={'Сублимированные'}>Сублимированные</Option>\r\n                            <Option value={'Насекомоядные,листоядные,приматы'}>Насекомоядные,листоядные,приматы</Option>\r\n                            <Option value={'Рыбки и крабы'}>Рыбки и крабы</Option>\r\n                            <Option value={'Витамины/лакомства'}>Витамины/лакомства</Option>\r\n                            <Option value={'Корма/диеты'}>Корма/диеты</Option>\r\n                            <Option value={'Птицы'}>Птицы</Option>\r\n                            <Option value={'Средства ухода'}>Средства ухода</Option>\r\n                            <Option value={'Прочее'}>Прочее</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item >\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Добавить\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n            <Input value={key} onChange={event=>setKey(event.target.value)} placeholder={'Вставьте в это поле ключ доступа. Без него изменения не будут применены.'}/>\r\n            <Button onClick={()=>setVisible(!visible)}>+Добавить товар</Button>\r\n            <Table columns={columns} dataSource={arrItems} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Items","import React, {useEffect, useState} from \"react\";\r\nimport {Table, Tag, Space, Button, InputNumber, Select, message, Input} from 'antd';\r\nconst {Option} = Select;\r\nconst Orders = () => {\r\n    const [arrOrders, setArrOrders] = useState([]);\r\n    const [key, setKey] = useState('');\r\n    const changeStatus = async(value, product) => {\r\n        const newArr = await arrOrders.map(item=>{\r\n            if (item._id === product._id){\r\n                const newItem = {...item};\r\n                newItem.status = value;\r\n                return newItem\r\n            }\r\n            return item\r\n        });\r\n        setArrOrders(newArr)\r\n    };\r\n    const changeTrack = async(track, product) => {\r\n        console.log(track)\r\n        const newArr = await arrOrders.map(item=>{\r\n            if (item._id === product._id){\r\n                const newItem = {...item};\r\n                newItem.track = track;\r\n                return newItem\r\n            }\r\n            return item\r\n        });\r\n        setArrOrders(newArr)\r\n    }\r\n    const saveProd = async(product) => {\r\n        product.key = key;\r\n        changeProduct(product)\r\n    };\r\n    const changeProduct = (product) => {\r\n        product.key = key;\r\n        fetch('https://saharnypossum.herokuapp.com/pay/orders',{\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(product) // body data type must match \"Content-Type\" header\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>res.error ? sendMessage(res.error) : sendMessage('Изменения сохранены'))\r\n    };\r\n    const sendMessage = (text) => {\r\n        message.info(text);\r\n    };\r\n    useEffect(()=>{\r\n        fetch('https://saharnypossum.herokuapp.com/pay/orders', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify({}) //\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                console.log(res)\r\n                setArrOrders(res)\r\n            })\r\n    }, []);\r\n    const columns = [\r\n        {\r\n            title: 'Пользователь',\r\n            dataIndex: 'user',\r\n            key: 'user',\r\n            render: user => <a target=\"_blank\" rel=\"noopener noreferrer\" href={`http://vk.com/id${user}`}>{`http://vk.com/id${user}`}</a>,\r\n        },\r\n        {\r\n            title: 'Номер заказа',\r\n            dataIndex: 'num',\r\n            key: 'num',\r\n            render: num => num,\r\n        },\r\n        {\r\n            title: 'Сумма',\r\n            dataIndex: 'sum',\r\n            key: 'sum',\r\n            render: sum => sum,\r\n        },\r\n        {\r\n            title: 'Детали',\r\n            dataIndex: 'jsonParams',\r\n            key: 'jsonParams',\r\n            render: (jsonParams, order) =><div>\r\n                <pre>{JSON.stringify(jsonParams, \"\", 2)}</pre>\r\n                <Button type=\"dashed\" onClick={()=>saveProd(order)}>Сохранить</Button>\r\n            </div>,\r\n        },\r\n        {\r\n            title: 'Track-code',\r\n            dataIndex: 'track',\r\n            key: 'track',\r\n            render: (track, order) =>(<Input value={track} placeholder={!track && \"Не указан\"} onChange={(event)=>changeTrack(event.target.value, order)}/>),\r\n        },\r\n        {\r\n            title: 'Статус',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            render: (status, order) =>(<Select value={status || null} onChange={(value)=>changeStatus(value, order)}>\r\n                <Option value={'В обработке'}>В обработке</Option>\r\n                <Option value={'Оплачен'}>Оплачен</Option>\r\n                <Option value={'Отправлен'}>Отправлен</Option>\r\n                <Option value={'Отменен'}>Отменен</Option>\r\n            </Select>),\r\n        }\r\n    ];\r\n    return (\r\n        <div className=\"container\">\r\n            <Input value={key} onChange={event=>setKey(event.target.value)} placeholder={'Вставьте в это поле ключ доступа. Без него изменения не будут применены.'}/>\r\n            <Table columns={columns} dataSource={arrOrders} />\r\n        </div>\r\n    )\r\n}\r\nexport default Orders","import React, {useEffect, useState} from \"react\";\r\nimport {Table, Tag, Space, Button, InputNumber, Select, message, Input} from 'antd';\r\nconst {Option} = Select;\r\nconst OrdersOld = () => {\r\n    const [arrOrders, setArrOrders] = useState([]);\r\n    const [key, setKey] = useState('');\r\n    const changeStatus = async(value, product) => {\r\n        const newArr = await arrOrders.map(item=>{\r\n            if (item._id === product._id){\r\n                const newItem = {...item};\r\n                newItem.status = value;\r\n                return newItem\r\n            }\r\n            return item\r\n        });\r\n        setArrOrders(newArr)\r\n    };\r\n    const changeTrack = async(track, product) => {\r\n        const newArr = await arrOrders.map(item=>{\r\n            if (item._id === product._id){\r\n                const newItem = {...item};\r\n                newItem.track = track;\r\n                return newItem\r\n            }\r\n            return item\r\n        });\r\n        setArrOrders(newArr)\r\n    }\r\n    const saveProd = async(product) => {\r\n        product.key = key;\r\n        changeProduct(product)\r\n    };\r\n    const changeProduct = (product) => {\r\n        product.key = key;\r\n        fetch('https://saharnypossum.herokuapp.com/pay/orders',{\r\n            method: 'PATCH', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify(product) // body data type must match \"Content-Type\" header\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>res.error ? sendMessage(res.error) : sendMessage('Изменения сохранены'))\r\n    };\r\n    const sendMessage = (text) => {\r\n        message.info(text);\r\n    };\r\n    useEffect(()=>{\r\n        fetch('https://saharnypossum.herokuapp.com/pay/ordersOld', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *client\r\n            body: JSON.stringify({}) //\r\n        })\r\n            .then(res=>res.json())\r\n            .then(res=>{\r\n                console.log(res)\r\n                setArrOrders(res)\r\n            })\r\n    }, []);\r\n    const columns = [\r\n        {\r\n            title: 'Пользователь',\r\n            dataIndex: 'user',\r\n            key: 'user',\r\n            render: user => <a target=\"_blank\" rel=\"noopener noreferrer\" href={`http://vk.com/id${user}`}>{`http://vk.com/id${user}`}</a>,\r\n        },\r\n        {\r\n            title: 'Номер заказа',\r\n            dataIndex: 'num',\r\n            key: 'num',\r\n            render: num => num,\r\n        },\r\n        {\r\n            title: 'Сумма',\r\n            dataIndex: 'sum',\r\n            key: 'sum',\r\n            render: sum => sum,\r\n        },\r\n        {\r\n            title: 'Детали',\r\n            dataIndex: 'jsonParams',\r\n            key: 'jsonParams',\r\n            render: (jsonParams, order) =><div>\r\n                <pre>{JSON.stringify(jsonParams, \"\", 2)}</pre>\r\n                <Button type=\"dashed\" onClick={()=>saveProd(order)}>Сохранить</Button>\r\n            </div>,\r\n        },\r\n        {\r\n            title: 'Track-code',\r\n            dataIndex: 'track',\r\n            key: 'track',\r\n            render: (track, order) =>(<Input value={track} placeholder={!track && \"Не указан\"} onChange={(event)=>changeTrack(event.target.value, order)}/>),\r\n        },\r\n        {\r\n            title: 'Статус',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            render: (status, order) =>(<Select value={status || null} onChange={(value)=>changeStatus(value, order)}>\r\n                <Option value={'В обработке'}>В обработке</Option>\r\n                <Option value={'Оплачен'}>Оплачен</Option>\r\n                <Option value={'Отправлен'}>Отправлен</Option>\r\n                <Option value={'Отменен'}>Отменен</Option>\r\n            </Select>),\r\n        }\r\n    ];\r\n    return (\r\n        <div className=\"container\">\r\n            <Input value={key} onChange={event=>setKey(event.target.value)} placeholder={'Вставьте в это поле ключ доступа. Без него изменения не будут применены.'}/>\r\n            <Table columns={columns} dataSource={arrOrders} />\r\n        </div>\r\n    )\r\n}\r\nexport default OrdersOld","import React, {useState} from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport {Button, Tabs} from \"antd\";\nimport Items from \"./items\";\nimport Orders from \"./orders\";\nimport OrdersOld from \"./ordersOld\"\nconst { TabPane } = Tabs;\n\nconst App = () => {\n    const [tab, setTab] = useState('items')\n    const changeTab = (key) => {\n        setTab(key)\n    }\nreturn (\n    <Tabs defaultActiveKey={tab} onChange={changeTab}>\n        <TabPane tab=\"Товары\" key=\"items\">\n            <Items />\n        </TabPane>\n        <TabPane tab=\"Заказы (новые)\" key=\"orders\">\n            <Orders />\n        </TabPane>\n        <TabPane tab=\"Заказы (отправленные)\" key=\"orders_old\">\n            <OrdersOld />\n        </TabPane>\n    </Tabs>\n)\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}